[tool.poetry]
name = "financial-valuation-engine"
version = "1.0.0"
description = "Professional Financial Valuation System with Web API"
authors = ["Pranay <upreti.pranay@gmail.com>"]
readme = "README.md"
packages = []
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
# Core financial dependencies
numpy = "^1.24.0"
pandas = "^2.0.0"
# Backend dependencies
flask = "^3.1.1"
flask-cors = "^6.0.1"
pydantic = "^2.11.7"
python-multipart = "^0.0.20"
requests = "^2.32.4"
flask-swagger-ui = "^5.21.0"
apispec = "^6.8.2"
marshmallow = "^4.0.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^8.4.1"
pytest-flask = "^1.3.0"
pytest-cov = "^4.0.0"
# Code quality
black = "^25.1.0"
isort = "^5.12.0"
flake8 = "^7.3.0"
mypy = "^1.0.0"
# Security
bandit = "^1.7.0"
safety = "^2.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
test = "run_tests:main"
start-backend = "backend.run:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "finance_core"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "finance_core",
    "backend/tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["finance_core", "backend/app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"] 